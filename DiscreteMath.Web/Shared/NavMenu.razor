@using DiscreteMath.Web.Pages
@using System.Text.RegularExpressions

@inject NavigationManager NavigationManager

<div class="top-row pl-4 navbar navbar-dark">
    <button class="btn btn-primary" @onclick="() => NavigationManager.NavigateTo(string.Empty)">
        DiscreteMath
    </button>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="@(nameof(SetTheory).ToLower())">
                <span class="oi oi-align-left" aria-hidden="true"></span> @(SplitCamelCase(nameof(SetTheory)))
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="@(nameof(Other).ToLower())">
                <span class="oi oi-align-left" aria-hidden="true"></span> @(SplitCamelCase(nameof(Other)))
            </NavLink>
        </li>
    </ul>
</div>

@code {
    bool collapseNavMenu = true;
    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    static string SplitCamelCase(string camelCase)
    {
        return Regex.Replace(camelCase, "([A-Z])", " $1", RegexOptions.Compiled).Trim();
    }
}